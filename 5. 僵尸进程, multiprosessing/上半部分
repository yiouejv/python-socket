
如何避免僵尸进程的产生
    1. 处理子进程退出状态
        pid, status = os.wait()
        功能：
            在父进程中阻塞等待处理子进程退出
        参数：
            无
        返回值：
            pid 退出的子进程的PID号
            status 获取子进程的退出状态
        实例
            wait.py

        pid, status = os.waitpid(pid, option)
        功能：
            在父进程中阻塞等待处理子进程退出
        参数：
            pid:
                -1 等待任意子进程退出
                >0 的整数, 表示等待对应PID号的子进程退出
            option:
                0 表示阻塞等待
                WNOHANG 表示非阻塞
        返回值：
            pid 退出的子进程的PID号
            status 获取子进程的退出状态
        实例
            waitpid.py
        waitpid(-1, 0)   ---> 等价于 wait()

    2. 如何让父进程先退出
        1. 父进程创建子进程等待子进程退出
        2. 子进程创建二级子进程后立即退出
        3. 二级子进程称为孤儿，和原来的父进程各自执行事件
        实例：
  