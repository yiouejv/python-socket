          fork.py


multiprocessing 模块创建进程
    1. 需要将要执行的事情封装为函数
    2. 使用multiprocessing 模块中Process 类创建进程对象
    3. 通过对象属性设置和Process的初始化函数对进程设置，绑定要执行的函数
    4. 启动进程会自动执行绑定的函数
    5. 完成进程的回收

Process()
    功能
        创建进程对象
    参数
        name    进程名称        Process-1
        target  进程绑定函数     必选参数
        args    元组, 给target函数按照位置传参
        kwargs  字典, 给target函数按照字典关键字传参

p.start()
    功能
        启动进程
    *target 函数自动执行， 此时进程真正被创建

p.join([timeout])
    功能
        阻塞等待回收的子进程
    参数
        超时时间

# 使用multiprocessing 创建子进程， 同样子进程复制父进程的全部代码段， 父子进程各自互不影响，
  父子进程有各自的运行空间

# 如果不使用join回收子进程则进程退出后会成为僵尸进程

# 使用multiprocessing 创建子进程往往父进程只是用来创建进程回收进程













